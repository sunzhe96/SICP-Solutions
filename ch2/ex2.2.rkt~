#lang sicp

;; Exercise 2.2

;; constructor
(define (make-point x y) (cons x y))
(define (make-segment start end) (cons start end))

;; selector
(define (start-segment point) (car point))
(define (end-segment point) (cdr point))

;; midpoint
(define (midpoint segment)
  (let ((start-point (start-segment segment))
        (end-point (end-segment segment)))
    (make-point (/ (+ (car (start-point)) (car (end-point))) 2)
                (/ (+ (cdr (start-point)) (cdr (end-point))) 2))))

(define (print-point p)
  (newline)
  (display "(")
  (display (x-point p))
  (display ",")
  (display (y-point p))
  (display ")"))

(define a (make-point 1 3))
(define b (make-point 5 8))
(define seg1 (make-segment a b))
(print-point (midpoint seg1))
