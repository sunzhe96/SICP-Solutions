#lang sicp

;; Exercise 2.24

(define a (list 1 (list 2 (list 3 4))))

;; (define (print-tree items)
;;   (display items)
;;   (newline)
;;   (display (car items))
;;   (display " *** ")
;;   (cond
;;     ((pair? (cdr items)) (print-tree (cdr items)))
;;     ((null? (cdr items) (print-tree (car items))))
;;     (else (display (cdr items)))))



(define (print-tree items)
  (cond ((null? items)
         (display ""))
        ((pair? (cdr items))
         (newline) (display (car items))
         (print-tree (cdr items)))
        ((null? (cdr items) (newline) (display (car items))
                (print-tree (car items))))
        (else (display cdr items))))

(print-tree a)
