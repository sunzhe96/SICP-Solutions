#lang sicp

;; Exercise 2.22
(define (square x) (* x x))

(define (square-list items)
  (define (iter new-items items)
    (if (null? items)
        new-list
        (iter (cons (square (car items))
                    new-list)
              (cdr items))))
  (iter nil items))

(square-list (list 1 2 3 4))
