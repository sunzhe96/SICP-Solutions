#lang sicp

;; Exercise 1.38

;; recursive procedure

(define (cont-frac n d k)
  
  (define (cont-frac-recursive i)
        (/ (n i)
           (+ (d i)
              (if (= i k)
                  0
                  (cont-frac-recursive (+ i 1))))))
  
  (cont-frac-recursive 1))

(define (e-approx k)
  (+ 2
     (cont-frac
      (lambda (i) 1)
      (lambda (i)
        (cond
          ((= i 2) 2)
          ((= (remainder i 3) 2)
           (+ (* (/ (- i 2) 3) 1) 2.0))
          (else 1)))
      k)))

(e-approx 10)
